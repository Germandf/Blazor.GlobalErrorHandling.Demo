@inherits ErrorBoundary
@inject ISnackbar Snackbar
@inject ILogger<ErrorBoundary> Logger;

@* https://stackoverflow.com/a/74378622/18104086 *@

@if (CurrentException is null)
{
    @ChildContent
}
else if (ErrorContent is not null)
{
    @ErrorContent(CurrentException)
}
else
{
    @ChildContent

    @foreach (var exception in receivedExceptions)
    {
        Snackbar.Add(@exception.Message, Severity.Error);
    }

    Recover();
}

@code {

    List<Exception> receivedExceptions = new();

    protected override Task OnErrorAsync(Exception exception)
    {
        if (exception.Message is "Kill!")
        {
            throw exception;
        }

        receivedExceptions.Add(exception);
        Logger.LogError(exception, "Error catched by {0}", nameof(CustomErrorBoundary));
        return base.OnErrorAsync(exception);
    }

    public new void Recover()
    {
        receivedExceptions.Clear();
        base.Recover();
    }
}